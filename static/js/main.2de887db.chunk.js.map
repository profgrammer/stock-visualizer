{"version":3,"sources":["actions/searchTicker.js","components/searchBar.js","components/stockList.js","reducers/searchReducer.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_TICKER","SearchBar","props","useState","ticker","setTicker","dispatch","useDispatch","onSubmit","event","preventDefault","alert","endpoint","response","Axios","get","type","payload","seaarchTicker","className","value","onChange","e","target","placeholder","aria-label","aria-describedby","StockList","stocks","useSelector","state","console","log","getStockClosePrices","timeSeries","closePrices","Object","keys","map","key","parseInt","reverse","stock","toUpperCase","data","width","height","margin","color","searchReducer","action","reducer","combineReducers","store","createStore","applyMiddleware","ReactPromise","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEaA,EAAgB,gBC4BdC,EAzBG,SAAAC,GAAU,IAAD,EAEKC,mBAAS,IAFd,mBAEhBC,EAFgB,KAERC,EAFQ,KAGjBC,EAAWC,cAWjB,OACI,uBAAMC,SAXV,SAAyBC,GAErB,GADAA,EAAMC,iBACQ,KAAXN,EACC,OAAOO,MAAM,yBAGjBL,EDVqB,SAACF,GAC1B,IAAMQ,EAAQ,8EAA0ER,EAA1E,mBAHF,oBAINS,EAAWC,IAAMC,IAAIH,GAC3B,MAAO,CACHI,KAAMhB,EACNiB,QAASJ,GCKAK,CAAcd,IACvBC,EAAU,KAIuBc,UAAU,mBAA3C,UACI,uBAAOC,MAAOhB,EAAQiB,SAAU,SAAAC,GAAC,OAAIjB,EAAUiB,EAAEC,OAAOH,QAAQJ,KAAK,OAAOG,UAAU,eAAeK,YAAY,4BAA4BC,aAAW,uBAAuBC,mBAAiB,kBAChM,qBAAKP,UAAU,qBAAf,SACI,wBAAQA,UAAU,4BAA4BH,KAAK,SAAnD,0B,QC0BDW,EA7CG,SAAAzB,GAEd,IAAM0B,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,UACjDG,QAAQC,IAAI,YAAaJ,GAEzB,IAAMK,EAAsB,SAAAC,GACxB,IAAMC,EAAcC,OAAOC,KAAKH,GAAYI,KAAI,SAAAC,GAAG,OAAIC,SAASN,EAAWK,GAAK,YAAa,OAAKE,UAElG,OADAV,QAAQC,IAAIG,GACLA,GAGX,OACI,8BACI,wBAAOhB,UAAU,QAAjB,UACI,gCACI,+BACI,8CACA,4CAGR,gCACKS,EAAOU,KAAI,SAAAI,GACR,OACI,+BACI,oBAAIvB,UAAU,eAAd,SACKuB,EAAM,aAAa,aAAaC,gBAErC,oBAAIxB,UAAU,cAAd,SACI,cAAC,aAAD,CACIyB,KAAMX,EAAoBS,EAAM,wBAChCG,MAAO,IACPC,OAAQ,GACRC,OAAQ,EAJZ,SAKQ,cAAC,iBAAD,CAAgBC,MAAM,0B,QCnBnDC,EAhBO,WAAiC,IAAhCnB,EAA+B,uDAAzB,CAACF,OAAQ,IAAKsB,EAAW,uCAClD,OAAOA,EAAOlC,MACV,KAAKhB,EACD,OAAIkD,EAAOjC,QAAQ2B,KAAK,kBAKpBjC,MAAM,kCACCmB,GALA,CACHF,OAAO,CAAEsB,EAAOjC,QAAQ2B,MAAlB,mBAA2Bd,EAAMF,UAMnD,QACI,OAAOE,ICPJqB,EAJCC,YAAgB,CAC5BxB,OAAQqB,ICINI,EAAQC,YAAYH,EAASI,YAAgBC,MAapCC,MAXf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,sBAAKlC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCHOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2de887db.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const SEARCH_TICKER = 'search_ticker';\r\nconst API_KEY = 'JTYD8CJD7AGH5YOZ';\r\n\r\nexport const seaarchTicker = (ticker) => {\r\n    const endpoint = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${API_KEY}`;\r\n    const response = Axios.get(endpoint);\r\n    return {\r\n        type: SEARCH_TICKER,\r\n        payload: response\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {seaarchTicker} from '../actions/searchTicker';\r\n\r\nconst SearchBar = props => {\r\n\r\n    const [ticker, setTicker] = useState('');\r\n    const dispatch = useDispatch();\r\n    function getStockDetails(event) {\r\n        event.preventDefault();\r\n        if(ticker === \"\") {\r\n            return alert(\"please enter a ticker\");\r\n        }\r\n        // add the ticker to the list here\r\n        dispatch(seaarchTicker(ticker));\r\n        setTicker('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={getStockDetails} className=\"input-group my-3\">\r\n            <input value={ticker} onChange={e => setTicker(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Search for a stock here..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" type=\"submit\">Search</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Sparklines, SparklinesLine} from 'react-sparklines';\r\n\r\nconst StockList = props => {\r\n\r\n    const stocks = useSelector(state => state.stocks.stocks);\r\n    console.log(\"stocks - \", stocks);\r\n\r\n    const getStockClosePrices = timeSeries => {\r\n        const closePrices = Object.keys(timeSeries).map(key => parseInt(timeSeries[key][\"4. close\"], 10)).reverse();\r\n        console.log(closePrices);\r\n        return closePrices;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Stock Ticker</th>\r\n                        <th>Graph</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map(stock => {\r\n                        return (\r\n                            <tr>\r\n                                <td className=\"stock-symbol\">\r\n                                    {stock[\"Meta Data\"][\"2. Symbol\"].toUpperCase()}\r\n                                </td>\r\n                                <td className=\"stock-graph\">\r\n                                    <Sparklines \r\n                                        data={getStockClosePrices(stock[\"Time Series (Daily)\"])} \r\n                                        width={200} \r\n                                        height={50} \r\n                                        margin={5}>\r\n                                            <SparklinesLine color=\"red\" />\r\n                                        </Sparklines>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockList;","import {SEARCH_TICKER} from '../actions/searchTicker';\r\n\r\nconst searchReducer = (state={stocks: []}, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_TICKER:\r\n            if(!action.payload.data[\"Error Message\"]) {\r\n                return {\r\n                    stocks: [action.payload.data, ...state.stocks]\r\n                }\r\n            } else {\r\n                alert(\"data for this stock not found!\");\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchReducer;","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nconst reducer = combineReducers({\r\n    stocks: searchReducer\r\n});\r\n\r\nexport default reducer;","import { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport ReactPromise from 'redux-promise';\n\nimport SearchBar from './components/searchBar';\nimport StockList from './components/stockList';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(ReactPromise));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <SearchBar />\n        <StockList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}